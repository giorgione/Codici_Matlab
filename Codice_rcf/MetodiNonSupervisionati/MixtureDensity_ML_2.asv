% MixtureDensity_ML_2.m
% 
%
% Data p,una Mistura di 2 Gaussiane 1-D ed un set di Dati 1-D applico l'
% algoritmo ML e la sua versione ITERATIVA per la stima del Vettore 
% delle MEDIE e delle Varianze.
%
% p=Pw1*GaussianaMulti(o(1),u(1),x) + Pw2*GaussianaMulti(o(2),u(2),x)
%
% con:
%
% - Pw1=1/3 
%
% - Pw2=2/3
%
% - O= [1;1] -> Vettore delle Varianze Noto
%
% - u= vettore delle Medie da stimare
clc;close all;clear;

Dati=[0.608; -1.59; 0.235; 0.3949; -2.249; 2.704; -2.473; 0.672;
      0.262; 1.072; -1.773; 0.537; 3.24; 2.4; -2.499; 2.608;
      -3.458; 0.257; 2.569; 1.415; 1.410; -2.653; 1.396; 3.286; -0.712];
      

 syms x u1 u2 o1 o2;
 
 Pw1=1/3;
 Pw2=2/3;
 
 %Costruisco la Mistura
 Fun_Mixture=@(x,u,o) Pw1*GaussianaMulti(o(1),u(1),x) + Pw2*GaussianaMulti(o(2),u(2),x);
 
 n=length(Dati);
 
 %Definisco i settaggi dell' OTTIMIZAZIONE
 options = optimset('Display','final','MaxFunEvals',1500,'MaxIter',1500,'TolFun',1e-10,'TolX',1e-10);
 
 b=max(Dati);
 a=min(Dati);
 %Inizializzo i Valori della MEDIA con 2 numeri estratti a caso nell'
 %intervallo dei campioni
 Uo=a+(b-a)*rand(1,2)
 
 %Inizializzo la Varianza con 2 valori casuali in [0 1]
 Oo=randn(1,2);
 Vo=[Oo Uo];
 
 %Calcolo il Massimo della Funzione Verosimiglianza per la Mistura
 %Paramtrizzata
 fun=@(X) -Mixture_LogLike(X(1:2).^2,X(3:4),Dati,Pw1,Pw2);
 [V ,val,exitflag,output]=fminsearch(fun,Vo,options)
 Media1=V(3:4);
 Var1=V(1:2);
 
 syms x
 F=Fun_Mixture(x,Media1,Var1);
 ezplot(F);
 hold on; 
 
 plot(Dati,zeros(1,25),'og','MarkerSize',2,'MarkerFaceColor','g');
 plot(Media1(1),0,'or','MarkerSize',2,'MarkerFaceColor','r')
 plot(Media1(2),0,'or','MarkerSize',2,'MarkerFaceColor','r')
 title('Mistura di Gaussiane con Media Stimata mediante ML')
 
 %set(0,'CurrentFigure',f1);hold on
 %plot3(Uo(1),Uo(2),-fun(Uo),'or','MarkerFaceColor','r')
 %plot3(Media1(1),Media1(2),-val,'ob','MarkerFaceColor','b');
 
 %set(0,'CurrentFigure',f2);hold on
 
 display('Metodo Iterativo: premere un tasto per continuare..')
 pause;
 %Applico l' algoritmo Iterativo per la Stima del Vettore delle Medie:
 %
 U=Uo.';
 O=(Oo.^2).';
 for J=1:50
     U(:,J+1)=0;
     Den=0;
     P1=zeros(1,25);
     P2=zeros(1,25);
     for K=1:25 
         
        % Valuto la Mistura nel Punto x(k)  P(x(k) | ò)
        p(K)=Mixture(O(:,J),U(:,J),Dati(K),Pw1,Pw2);
        
        
        %Calcolo la Verosimiglianza del Campione Xk alla componente 1 della
        %Mistura: P(w(i) | x(k) , ò(i))
        %
        % P(w(1) | x(k) , ò(1))
        p1(K)=GaussianaMulti(O(1,J),U(1,J),Dati(K));
        
        %Calcolo la Verosimiglianza del Campione Xk alla componente 2 della
        %Mistura: P(w(i) | x(k) , ò(i))
        %
        % P(w(2) | x(k) , ò(2))
        p2(K)=GaussianaMulti(O(2,J),U(2,J),Dati(K));
        
        
        %Calcolo P(w(i) | x(k) , ò(i))
        P1(K)=p1(K)*Pw1/p(K);
        P2(K)=p2(K)*Pw2/p(K);
        
     end
     
     %Aggiorno la Media 
     U(1,J+1)=(P1*Dati)/sum(P1);
     U(2,J+1)=(P2*Dati)/sum(P2);
     
     %Aggiorno la Varianza utilizzando la Media Corrente
     O(1,J+1)=(P1*(Dati-U(1,J+1)).^2)/sum(P1);
     O(2,J+1)=(P2*(Dati-U(2,J+1)).^2)/sum(P2);
     
     display('.')
 end
 Media2=U(:,end).';
 Var2=O(:,end).';
 
 figure;
 syms x
 F=Fun_Mixture(x,Media2,Var2);
 ezplot(F,[-4 4]);
 hold on;
 plot(Dati,zeros(1,25),'og','MarkerSize',2,'MarkerFaceColor','g');
 plot(Media2(1),0,'or','MarkerSize',2,'MarkerFaceColor','r')
 plot(Media2(2),0,'or','MarkerSize',2,'MarkerFaceColor','r')
 title('Mistura di Gaussiane con Media Stimata mediante ML iterativa')
 axis tight